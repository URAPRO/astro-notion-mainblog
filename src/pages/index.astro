---
import { NUMBER_OF_POSTS_PER_PAGE } from '../server-constants.ts'
import {
  getPosts,
  getRankedPosts,
  getAllTags,
  getNumberOfPages,
} from '../lib/notion/client.ts'
import { getPostLink } from '../lib/blog-helpers.ts'
import Layout from '../layouts/Layout.astro'
import NoContents from '../components/NoContents.astro'
import PostDate from '../components/PostDate.astro'
import PostUpdateDate from '../components/PostUpdateDate.astro'
import PostTags from '../components/PostTags.astro'
import PostTitle from '../components/PostTitle.astro'
import PostFeaturedImage from '../components/PostFeaturedImage.astro'
import PostExcerpt from '../components/PostExcerpt.astro'
import ReadMoreLink from '../components/ReadMoreLink.astro'
import Pagination from '../components/Pagination.astro'
import BlogPostsLink from '../components/BlogPostsLink.astro'
import BlogTagsLink from '../components/BlogTagsLink.astro'
import styles from '../styles/blog.module.css'
import PostUpdateDate from '../components/PostUpdateDate.astro';

const [posts, recentPosts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPosts(NUMBER_OF_POSTS_PER_PAGE),
  getPosts(5),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPages(),
])
---

<Layout 
  title="Home" 
  path="/"
  description=""
  ogImage=""
>
  <div slot="main" class={`${styles.main} posts-page`}>
    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div class={styles.post}>
            <div class={styles.postDetail}>
              <div class={styles.postDetailLeft}>
                <PostFeaturedImage post={post} enableLink={false} />
              </div>
              <div class={styles.postDetailRight}>
                <PostTitle post={post} enableLink={true} />
                <div class={styles.postDate}>
                  <PostDate post={post} />
                  <PostUpdateDate post={post} />
                </div>
                <PostTags post={post} enableLink={true} />
              </div>
              <a class={styles.postLink} href={getPostLink(post)} target={post.ExternalLink ? "_blank" : undefined}></a>
            </div>
          </div>
        ))
      )
    }

    <footer>
      <Pagination currentPage={1} numberOfPages={numberOfPages} tag="" />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="最新記事" posts={recentPosts} />
    <BlogPostsLink heading="おすすめ記事" posts={rankedPosts} />
    <BlogTagsLink heading="カテゴリー" tags={tags} />
  </div>
</Layout>
