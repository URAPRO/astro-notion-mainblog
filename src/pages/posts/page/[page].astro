---
import {
  getPostsByPage,
  getRankedPosts,
  getAllTags,
  getNumberOfPages,
  getPosts,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostUpdateDate from '../../../components/PostUpdateDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'
import { getPostLink } from '../../../lib/blog-helpers';

export async function getStaticPaths() {
  const numberOfPages = await getNumberOfPages()

  let params = []
  for (let i = 2; i <= numberOfPages; i++) {
    params.push({ params: { page: i.toString() } })
  }
  return params
}

const { page } = Astro.params

const [posts, recentPosts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByPage(parseInt(page, 10)),
  getPosts(5),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPages(),
])
---

<Layout 
  title={`Posts ${page}/${numberOfPages}`} 
  path={`/posts/page/${page}`}
  description=""
  ogImage=""
>
  <div slot="main" class={`${styles.main} ${styles.postsPage}`}>
    <header>
      <div class="page-container">{page}/{numberOfPages}</div>
    </header>

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div class={styles.post} data-post-slug={post.Slug}>
            <div class={styles.postDetail}>
              <div class={styles.postDetailLeft}>
                <PostFeaturedImage post={post} enableLink={false} />
              </div>
              <div class={styles.postDetailRight}>
                <PostTitle post={post} enableLink={true} />
                <div class={styles.postDate}>
                  <PostDate post={post} />
                  <PostUpdateDate post={post} />
                </div>
                <PostTags post={post} enableLink={true} />
              </div>
              <a class={styles.postLink} href={getPostLink(post)} target={post.ExternalLink ? "_blank" : undefined}></a>
            </div>
          </div>
        ))
      )
    }

    <footer>
      <Pagination
        currentPage={parseInt(page, 10)}
        numberOfPages={numberOfPages}
        tag=""
      />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="最新記事" posts={recentPosts} />
    <BlogPostsLink heading="おすすめ記事" posts={rankedPosts} />
    <BlogTagsLink heading="カテゴリー" tags={tags} />
  </div>
</Layout>

<style>
  .page-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  @media (max-width: 640px) {
    .page-container {
      font-size: 1.15rem;
    }
  }
</style>
