---
import * as interfaces from '../../lib/interfaces'
import { filePath } from '../../lib/blog-helpers'
import { getFileMapping } from '../../lib/notion/client'
import Caption from './Caption.astro'

export interface Props {
  block: interfaces.Block
  blockIdToFileMappings?: Record<string, any>
}

const { block, blockIdToFileMappings = {} } = Astro.props

let url: URL | undefined
try {
  const urlString = block.File?.External?.Url || block.File?.File?.Url
  if (urlString) {
    url = new URL(urlString)
  }
} catch (err) {
  console.error(`Invalid file URL. error: ${err}`)
}

let filename = '';
let filepath = '';

if (url) {
  if (block.File?.External) {
    filename = decodeURIComponent(url.pathname.split('/').slice(-1)[0])
    filepath = url.toString()
  } else if (block.File?.File) {
    // ブロックIDに対応するファイル名マッピングがあるか確認
    const mapping = blockIdToFileMappings[block.Id]
    
    if (mapping && mapping.originalFilename && mapping.newFilename && mapping.dirPath) {
      // マッピング情報が存在する場合は、新しいファイル名を使用
      filename = mapping.newFilename
      filepath = `${mapping.dirPath}/${mapping.newFilename}`
    } else {
      // メモリ内マッピングがない場合は、ファイルシステムから取得を試みる
      try {
        const urlPath = url.pathname
        const persistentMapping = getFileMapping(urlPath)
        
        if (persistentMapping && persistentMapping.newFilename) {
          // 永続化されたマッピング情報が存在する場合は、新しいファイル名を使用
          filename = persistentMapping.newFilename
          filepath = `${persistentMapping.dirPath}/${persistentMapping.newFilename}`
        } else {
          // マッピングが存在しない場合は通常のfilePathを使用
          filename = decodeURIComponent(url.pathname.split('/').slice(-1)[0])
          filepath = filePath(url)
        }
      } catch (error) {
        // エラーが発生した場合はデフォルトのパスを使用
        filename = decodeURIComponent(url.pathname.split('/').slice(-1)[0])
        filepath = filePath(url)
      }
    }
  }
}
---

<div class="file">
  <div>
    {
      url && block.File && (
        <a
          href={filepath}
          target="_blank"
          rel="noopener noreferrer"
        >
          <img
            src="https://www.notion.so/icons/document_gray.svg"
            alt="File icon in a file block"
          />{' '}
          {filename}
        </a>
      )
    }
  </div>
  {block.File && <Caption richTexts={block.File.Caption} />}
</div>

<style>
  .file {
  }

  .file a {
    display: block;
    padding: 0.5rem 0.2rem 0.4rem;
    border-radius: var(--radius);
    color: var(--fg);
    font-weight: 500;
    line-height: 1.4rem;
  }
  .file a:hover {
    background-color: #eee;
  }

  .file a img {
    width: 1.3rem;
    height: 1.3rem;
    vertical-align: sub;
  }
</style>
